a:2:{s:7:"current";a:7:{s:4:"date";a:2:{s:7:"created";i:1392284322;s:8:"modified";i:1392284322;}s:7:"creator";s:5:"lixin";s:4:"user";s:5:"uahoo";s:11:"last_change";a:7:{s:4:"date";i:1392284322;s:2:"ip";s:14:"10.221.135.120";s:4:"type";s:1:"C";s:2:"id";s:25:"git_concept:git_lost_head";s:4:"user";s:5:"uahoo";s:3:"sum";s:6:"创建";s:5:"extra";s:0:"";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}s:11:"description";a:1:{s:8:"abstract";s:511:"Losing Your Head
If you directly check out a specific commit rather than a branch,
say with a command like git checkout 520919b0, then Git gives
the odd and rather dire-sounding warning that you are now in
“detached HEAD state.” Fear not, Ichabod; all will be well. “Detached
HEAD” simply means that the HEAD ref now points directly
at a commit rather than referring to a particular branch by
name. Git operates normally in this mode: you can make commits,
and the HEAD ref moves forward as usual. Th…";}s:8:"relation";a:1:{s:10:"firstimage";s:0:"";}}s:10:"persistent";a:4:{s:4:"date";a:1:{s:7:"created";i:1392284322;}s:7:"creator";s:5:"lixin";s:4:"user";s:5:"uahoo";s:11:"last_change";a:7:{s:4:"date";i:1392284322;s:2:"ip";s:14:"10.221.135.120";s:4:"type";s:1:"C";s:2:"id";s:25:"git_concept:git_lost_head";s:4:"user";s:5:"uahoo";s:3:"sum";s:6:"创建";s:5:"extra";s:0:"";}}}