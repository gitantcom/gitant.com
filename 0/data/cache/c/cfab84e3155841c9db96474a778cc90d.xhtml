
<h2 class="sectionedit1" id="使用git_subtree集成项目到子目录">使用git subtree集成项目到子目录</h2>
<div class="level2">
<hr />

<p>
使用场景
</p>

<p>
例如，在项目Game中有一个子目录AI。Game和AI分别是一个独立的git项目，可以分开维护。为了避免直接复制粘贴代码，我们希望Game中的AI子目录与AI的git项目关联，有3层意思：
</p>

<p>
1. AI子目录使用AI的git项目来填充，内容保持一致。
</p>

<p>
2. 当AI的git项目代码有更新，可以拉取更新到Game项目的AI子目录来。
</p>

<p>
3. 反过来，当Game项目的AI子目录有变更，还可以推送这些变更到AI的git项目。
</p>

<p>
用git subtree可以轻松满足上面的需求。
对比git submodule
</p>

<p>
如果你没有用过git submodule，你甚至可以不用了解git submodule是什么，submodule的基本介绍也不在本文的说明范围内。虽然它满足了上述差不多的需求，但是复杂难用，以至于需要这么长一篇教程才能说清楚用法。
</p>

<p>
如果你的项目正在使用git submodule，你应该知道用submodule有多么麻烦，这里还有一篇文章专门解释git submodule的缺点，可以参考前面教程里的最后一段来删除submodule（是的，连删除步骤都非常麻烦）。
</p>

<p>
使用git subtree之后，管理、更新都更加方便。
什么是git subtree
</p>

<p>
git subtree是一条git子命令，本质上subtree是一种合并策略，从git v1.5.2，官方就推荐使用subtree代替submodule，所以它并不需要保存.submodule这样的元信息。
git subtree的前提条件
</p>

<p>
subtree子命令很晚才集成到git中，请确保你的git版本（使用git –version查看） &gt; v1.8.0.0。有些文章中说v1.7.11就已经集成了，实际上没有，如果直接执行会看到这样的结果：
</p>

<p>
$git subtree  
git: &#039;subtree&#039; is not a git command. See &#039;git –help&#039;.  
</p>

<p>
如果你是在OS X下使用git，推荐用homebrew来安装新版本
</p>

<p>
$brew install git  
$git –version  
git version 1.8.3.4  
</p>

<p>
git subtree用法
</p>

<p>
针对第一段的3条需求，我分别说明具体的命令。
1. 第一次添加子目录，建立与git项目的关联
</p>

<p>
建立关联总共有2条命令。
</p>

<p>
语法：git remote add -f &lt;子仓库名&gt; &lt;子仓库地址&gt;
</p>

<p>
解释：其中-f意思是在添加远程仓库之后，立即执行fetch。
</p>

<p>
语法：git subtree add –prefix=&lt;子目录名&gt; &lt;子仓库名&gt; &lt;分支&gt; –squash
</p>

<p>
解释：–squash意思是把subtree的改动合并成一次commit，这样就不用拉取子项目完整的历史记录。–prefix之后的=等号也可以用空格。
</p>

<p>
示例
</p>

<p>
$git remote add -f ai <a href="https://github.com/aoxu/ai.git" class="urlextern" title="https://github.com/aoxu/ai.git"  rel="nofollow">https://github.com/aoxu/ai.git</a>
$git subtree add –prefix=ai ai master –squash  
</p>

<p>
2. 从远程仓库更新子目录
</p>

<p>
更新子目录有2条命令。
</p>

<p>
语法：git fetch &lt;远程仓库名&gt; &lt;分支&gt;
</p>

<p>
语法：git subtree pull –prefix=&lt;子目录名&gt; &lt;远程分支&gt; &lt;分支&gt; –squash
</p>

<p>
示例
</p>

<p>
$git fetch ai master  
$git subtree pull –prefix=ai ai –squash  
</p>

<p>
3. 从子目录push到远程仓库（确认你有写权限）
</p>

<p>
推送子目录的变更有1条命令。
</p>

<p>
语法：git subtree push –prefix=&lt;子目录名&gt; &lt;远程分支名&gt; 分支
</p>

<p>
示例
</p>

<p>
$git subtree push –prefix=ai ai master  
</p>

<p>
参考资料：
</p>

</div>
<!-- EDIT1 SECTION "使用git subtree集成项目到子目录" [2-] -->