a:125:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:24:"HTTPS 方式保存密码";i:1;i:3;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1;}i:4;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"OSX 用户";}i:2;i:35;}i:5;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:45;}i:6;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:45;}i:7;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:195:"如果你的网络环境中只能使用 HTTPS 的方式，那么可以尝试安装 osxkeychain 凭据助手，并在 Git 中设置使用。注意：Git 版本要在 1.7.9 及以上才可使用。";}i:2;i:47;}i:8;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:242;}i:9;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:242;}i:10;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:222:"如果你装了 homebrew 的话，那么应该已经自带了 osxkeychain，可以通过下面的命令验证：
$ git credential-osxkeychain # Test for the cred helper Usage: git credential-osxkeychain get|store|erase&gt;";}i:2;i:244;}i:11;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:466;}i:12;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:466;}i:13;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:113:"$ git credential-osxkeychain
# Test for the cred helper
Usage: git credential-osxkeychain &lt;get|store|erase&gt;";}i:2;i:472;}i:14;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:585;}i:15;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:585;}i:16;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:181:"如果没有安装，那么可以使用 curl 下载并安装：
$ git credential-osxkeychain # Test for the cred helper git: 'credential-osxkeychain' is not a git command. See 'git ";}i:2;i:593;}i:17;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:774;}i:18;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:"help'. $ curl -s -O ";}i:2;i:776;}i:19;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:77:"http://github-media-downloads.s3.amazonaws.com/osx/git-credential-osxkeychain";i:1;N;}i:2;i:796;}i:20;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:112:" # Download the helper $ chmod u+x git-credential-osxkeychain # Fix the permissions on the file so it can be run";}i:2;i:873;}i:21;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:985;}i:22;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:985;}i:23;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:117:"$ git credential-osxkeychain
# Test for the cred helper
git: 'credential-osxkeychain' is not a git command. See 'git ";}i:2;i:991;}i:24;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:1108;}i:25;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"help'.";}i:2;i:1110;}i:26;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1116;}i:27;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1116;}i:28;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"$ curl -s -O ";}i:2;i:1119;}i:29;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:77:"http://github-media-downloads.s3.amazonaws.com/osx/git-credential-osxkeychain";i:1;N;}i:2;i:1132;}i:30;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:22:"
# Download the helper";}i:2;i:1209;}i:31;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1231;}i:32;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1231;}i:33;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:89:"$ chmod u+x git-credential-osxkeychain
# Fix the permissions on the file so it can be run";}i:2;i:1234;}i:34;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1323;}i:35;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1323;}i:36;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:328:"现在，你需要将助手安装到与 Git 的安装目录相同的位置：
$ which git # Find where git is installed /usr/local/git/bin/git $ sudo mv git-credential-osxkeychain /usr/local/git/bin/ # Move the file so git can access it Password: [enter your password] # NOTE: the path /usr/local/git/bin may vary based on your ";}i:2;i:1329;}i:37;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:2:"OS";}i:2;i:1657;}i:38;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:181:" version or where # you have installed Git. If `which git` showed a different value, you should # adjust the location to which you `mv` the file. For example, if `which git` # said ";}i:2;i:1659;}i:39;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:1840;}i:40;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"/usr/bin/git";}i:2;i:1841;}i:41;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:1853;}i:42;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:52:", use `sudo mv git-credential-osxkeychain /usr/bin`.";}i:2;i:1854;}i:43;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1906;}i:44;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1906;}i:45;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:64:"$ which git
# Find where git is installed
/usr/local/git/bin/git";}i:2;i:1910;}i:46;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1974;}i:47;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1974;}i:48;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:125:"$ sudo mv git-credential-osxkeychain /usr/local/git/bin/
# Move the file so git can access it
Password: [enter your password]";}i:2;i:1977;}i:49;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2102;}i:50;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2102;}i:51;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:59:"# NOTE: the path /usr/local/git/bin may vary based on your ";}i:2;i:2105;}i:52;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:2:"OS";}i:2;i:2164;}i:53;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:182:" version or where
# you have installed Git. If `which git` showed a different value, you should
# adjust the location to which you `mv` the file.  For example, if `which git`
# said ";}i:2;i:2166;}i:54;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:2348;}i:55;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"/usr/bin/git";}i:2;i:2349;}i:56;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:2361;}i:57;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:52:", use `sudo mv git-credential-osxkeychain /usr/bin`.";}i:2;i:2362;}i:58;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2414;}i:59;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2414;}i:60;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:96:"若想让 Git 使用 osxkeychain，可以在 Git 的全局设置中进行设置：
$ git config ";}i:2;i:2420;}i:61;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:2516;}i:62;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:87:"global credential.helper osxkeychain # Set git to use the osxkeychain credential helper";}i:2;i:2518;}i:63;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2605;}i:64;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2605;}i:65;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"$ git config ";}i:2;i:2611;}i:66;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:2624;}i:67;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:87:"global credential.helper osxkeychain
# Set git to use the osxkeychain credential helper";}i:2;i:2626;}i:68;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2713;}i:69;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2713;}i:70;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:233:"经过这样的设置之后，下次再克隆 HTTPS 地址时会询问你的用户名和密码，并授权给 OSX keychain。完成这些之后你的用户名和密码就会存储到 keychain 中，再也不会在 Git 中询问了。";}i:2;i:2719;}i:71;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2952;}i:72;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2952;}i:73;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:"Windows 用户";}i:2;i:2954;}i:74;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2968;}i:75;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2968;}i:76;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:112:"如果你是 Windows 用户，那么首先可以考虑使用 GitHub for Windows，它已经包含了该助手。";}i:2;i:2970;}i:77;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3082;}i:78;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3082;}i:79;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:72:"如果你是钟爱命令行的话，可以下载对应系统的版本：";}i:2;i:3084;}i:80;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3156;}i:81;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3156;}i:82;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:24:"Windows Vista & 7 版本";}i:2;i:3158;}i:83;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3182;}i:84;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3182;}i:85;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"Windows 8 版本";}i:2;i:3184;}i:86;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3200;}i:87;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3200;}i:88;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"Source 版本";}i:2;i:3202;}i:89;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3215;}i:90;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3215;}i:91;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:210:"解压缩文件并将里面的 git-credential-winstore.exe 放到 git 所在的目录运行即可，下次再 commit 的时候，会弹出个窗口询问用户名和密码，填写一次即可永久保存了。";}i:2;i:3217;}i:92;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3427;}i:93;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3427;}i:94;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:139:"NOTE： 一定要将 git-credential-winstore.exe 复制到 git 所在目录才行，比如我的目录是在D:\Program Files\Git\bin 中。";}i:2;i:3429;}i:95;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3568;}i:96;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3568;}i:97;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"Linux 用户";}i:2;i:3570;}i:98;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3582;}i:99;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3582;}i:100;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:194:"Linux 用户可以使用 ‘cache’ 认证助手包来缓存认证信息，运行下面的命令来启用凭据缓存，启用后每次输入密码将保存一小时（3600秒）：
git config ";}i:2;i:3584;}i:101;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:3778;}i:102;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:"global credential.helper 'cache ";}i:2;i:3780;}i:103;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:3812;}i:104;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:21:"timeout 3600'
1
2
3
4";}i:2;i:3814;}i:105;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3835;}i:106;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3835;}i:107;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"git config ";}i:2;i:3840;}i:108;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:3851;}i:109;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:"global credential.helper 'cache ";}i:2;i:3853;}i:110;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:3885;}i:111;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"timeout 3600'";}i:2;i:3887;}i:112;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3900;}i:113;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3900;}i:114;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:104:"下面的命令可以查看 ‘cache’ 认证助手的所有配置：
git help credential-cache
1
2
3
4";}i:2;i:3906;}i:115;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4010;}i:116;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4010;}i:117;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:25:"git help credential-cache";}i:2;i:4015;}i:118;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4040;}i:119;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4040;}i:120;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:73:"http://44ux.com/blog/2012/10/13/why-is-git-always-asking-for-my-password/";i:1;s:8:" source ";}i:2;i:4043;}i:121;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:4129;}i:122;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4129;}i:123;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4129;}i:124;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:4129;}}