a:60:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:12:"提交范围";i:1;i:3;i:2;i:4;}i:2;i:4;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:4;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4;}i:4;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:306:"现在你已经可以指明单次的提交，让我们来看看怎样指明一定范围的提交。这在你管理分支的时候尤显重要——如果你有很多分支，你可以指明范围来圈定一些问题的答案，比如：“这个分支上我有哪些工作还没合并到主分支的？”";}i:2;i:26;}i:5;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:332;}i:6;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:334;}i:7;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:6:"双点";i:1;i:3;i:2;i:334;}i:2;i:334;}i:8;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:334;}i:9;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:334;}i:10;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:" 你可以用";}i:2;i:350;}i:11;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:363;}i:12;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"..";}i:2;i:364;}i:13;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:366;}i:14;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:73:"来指两个提交(commit)之间的区间. 下面的命令会给出你在";}i:2;i:367;}i:15;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:440;}i:16;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"7b593b5";}i:2;i:441;}i:17;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:448;}i:18;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:" 和";}i:2;i:449;}i:19;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:453;}i:20;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"51bea1";}i:2;i:454;}i:21;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:460;}i:22;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"之间除了";}i:2;i:461;}i:23;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:473;}i:24;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"7b593b5外";}i:2;i:474;}i:25;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:484;}i:26;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:57:"的所有提交(commit)(注意:51bea1是最近的提交).";}i:2;i:485;}i:27;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:542;}i:28;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:542;}i:29;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:"7b593b5..51bea1";}i:2;i:544;}i:30;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:559;}i:31;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:559;}i:32;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:87:"这会包括所有 从 7b593b开始的提交(commit). 译者注: 相当于 7b593b..HEAD";}i:2;i:561;}i:33;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:648;}i:34;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:648;}i:35;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"7b593b.. ";}i:2;i:650;}i:36;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:659;}i:37;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:659;}i:38;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:392:"你想要查看你的试验分支上哪些没有被提交到主分支，那么你就可以使用 master..experiment 来让 Git 显示这些提交的日志——这句话的意思是“所有可从experiment分支中获得而不能从master分支中获得的提交”。为了使例子简单明了，我使用了图标中提交对象的字母来代替真实日志的输出，所以会显示：";}i:2;i:662;}i:39;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1060;}i:40;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:34:"
$ git log master..experiment
D
C
";i:1;N;i:2;N;}i:2;i:1060;}i:41;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1060;}i:42;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:224:"另一方面，如果你想看相反的——所有在 master 而不在 experiment 中的分支——你可以交换分支的名字。experiment..master 显示所有可在 master 获得而在 experiment 中不能的提交：";}i:2;i:1104;}i:43;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1334;}i:44;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:34:"
$ git log experiment..master
F
E
";i:1;N;i:2;N;}i:2;i:1334;}i:45;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1334;}i:46;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:174:"这在你想保持 experiment 分支最新和预览你将合并的提交的时候特别有用。这个语法的另一种常见用途是查看你将把什么推送到远程：";}i:2;i:1378;}i:47;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1558;}i:48;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:31:"
$ git log origin/master..HEAD
";i:1;N;i:2;N;}i:2;i:1558;}i:49;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1558;}i:50;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:460:"这条命令显示任何在你当前分支上而不在远程origin 上的提交。如果你运行 git push 并且的你的当前分支正在跟踪 origin/master，被git log origin/master..HEAD 列出的提交就是将被传输到服务器上的提交。 你也可以留空语法中的一边来让 Git 来假定它是 HEAD。例如，输入 git log origin/master.. 将得到和上面的例子一样的结果—— Git 使用 HEAD 来代替不存在的一边。";}i:2;i:1599;}i:51;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2059;}i:52;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2059;}i:53;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:29:":gitcommand:git-diff-help.png";i:1;s:8:"git_diff";i:2;N;i:3;s:3:"500";i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:2064;}i:54;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:2110;}i:55;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:42:":gitcommand:git-log-for-upload-smaller.png";i:1;s:7:"git_log";i:2;N;i:3;s:3:"500";i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:2111;}i:56;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:2169;}i:57;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2169;}i:58;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2169;}i:59;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:2169;}}