a:126:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:22:"git不同状态下diff";i:1;i:3;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1;}i:3;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:32;}i:4;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:32;}i:5;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:32;}i:6;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:56:" git diff             #检查工作区和缓存区差异";}i:2;i:36;}i:7;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:92;}i:8;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:92;}i:9;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:92;}i:10;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:92;}i:11;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:" git diff  ";}i:2;i:96;}i:12;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:107;}i:13;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:46:"cached   #检查缓存区和仓库之间差异";}i:2;i:109;}i:14;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:155;}i:15;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:155;}i:16;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:155;}i:17;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:155;}i:18;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:59:" git diff    HEAD     #检查工作区和仓库之间差异";}i:2;i:159;}i:19;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:218;}i:20;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:218;}i:21;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:218;}i:22;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:221;}i:23;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:18:"比对任意提交";i:1;i:3;i:2;i:221;}i:2;i:221;}i:24;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:221;}i:25;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:106:"
    $ git diff test            <1>
    $ git diff HEAD -- ./test  <2>
    $ git diff HEAD^ HEAD      <3>
";i:1;N;i:2;N;}i:2;i:253;}i:26;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:368;}i:27;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:368;}i:28;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:368;}i:29;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:73:" Instead of using the tip of the current branch, compare with the tip of ";}i:2;i:372;}i:30;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:445;}i:31;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"test";}i:2;i:446;}i:32;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:450;}i:33;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:" branch.";}i:2;i:451;}i:34;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:459;}i:35;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:459;}i:36;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:459;}i:37;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:459;}i:38;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:38:" Instead of comparing with the tip of ";}i:2;i:463;}i:39;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:501;}i:40;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"test";}i:2;i:502;}i:41;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:506;}i:42;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:90:" branch, compare with the tip of the current branch, but limit the comparison to the file ";}i:2;i:507;}i:43;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:597;}i:44;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"test";}i:2;i:598;}i:45;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:602;}i:46;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:".";}i:2;i:603;}i:47;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:604;}i:48;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:604;}i:49;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:604;}i:50;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:604;}i:51;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:64:" Compare the version before the last commit and the last commit.";}i:2;i:608;}i:52;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:672;}i:53;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:672;}i:54;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:672;}i:55;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:673;}i:56;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:680;}i:57;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:12:"比对标签";i:1;i:3;i:2;i:680;}i:2;i:680;}i:58;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:680;}i:59;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:17:"
$ git diff v0.9
";i:1;N;i:2;N;}i:2;i:706;}i:60;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:706;}i:61;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:40:"自从git 标签 v0.9 以来的变化。";}i:2;i:732;}i:62;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:778;}i:63;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:114:"
$ git diff v0.9 --stat
 README  |    2 +-
 ruby.rb |    4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)
";i:1;N;i:2;N;}i:2;i:778;}i:64;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:901;}i:65;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:907;}i:66;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:12:"对比分支";i:1;i:3;i:2;i:907;}i:2;i:907;}i:67;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:907;}i:68;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:907;}i:69;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:693:" 要比较两个不同的分支，你可以执行类似 git diff branchA branchB 的命令。 不过它的问题在于它会完完全全按你说的作 —— 它会直接给你个补丁文件，该补丁能够将甲分支的最新快照变成乙分支的最新快照的样子。 这意味着如果两个分支已经产生分歧 —— 奔往两个不同方向了 —— 它会移除甲分支中引入的所有工作，然后累加乙分支中的所有工作。 这大概不是你要的吧 —— 你想要不在甲分支中的乙分支的改动。所以你真的需要的是两个分支叉开去时，和最新的乙分支的差别。 所以，如果我们的历史记录看起来像这样：";}i:2;i:929;}i:70;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1628;}i:71;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:214:"
$ git log --graph --oneline --decorate --all
* 594f90b (HEAD, tag: v1.0, master) reverted to old class name
| * 1834130 (erlang) added haskell
| * ab5ab4c added erlang
|/
*   8d585ea Merge branch 'fix_readme'
...
";i:1;N;i:2;N;}i:2;i:1628;}i:72;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1628;}i:73;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:132:"并且，我们想要看“erlang”分支与主分支相比的查别。执行 git diff master erlang 会给我们错误的结果。";}i:2;i:1851;}i:74;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1989;}i:75;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:166:"
$ git diff --stat master erlang
 erlang_hw.erl |    5 +++++
 haskell.hs    |    4 ++++
 ruby.rb       |    4 ++--
 3 files changed, 11 insertions(+), 2 deletions(-)
";i:1;N;i:2;N;}i:2;i:1989;}i:76;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1989;}i:77;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:358:"你可以看到，它加上了 erlang 和 haskell 文件，这确实是我们在该分支中做的， 但是它同时恢复了我们在主分支中改动的 ruby 文件。我们真心想要的只是“erlang”分支中的改动（添加两个文件）。 我们可以通过求两个分支分歧时的共同提交与该分支的差值得到想要的结果：";}i:2;i:2165;}i:78;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2529;}i:79;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:139:"
$ git diff --stat 8d585ea erlang
 erlang_hw.erl |    5 +++++
 haskell.hs    |    4 ++++
 2 files changed, 9 insertions(+), 0 deletions(-)
";i:1;N;i:2;N;}i:2;i:2529;}i:80;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2529;}i:81;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:196:"这才是我们在找的，但是我们可不想要每次都要找出两个分支分歧时的那次提交。 幸运的是，Git 为此提供了一个快捷方式。 如果你执行 git diff master";}i:2;i:2677;}i:82;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:2873;}i:83;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:152:"erlang（在分支名之间有三个半角的点）， Git 就会自动找出两个分支的共同提交（也被成为合并基础），并求差值。";}i:2;i:2876;}i:84;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3034;}i:85;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:305:"
$ git diff --stat master erlang
 erlang_hw.erl |    5 +++++
 haskell.hs    |    4 ++++
 ruby.rb       |    4 ++--
 3 files changed, 11 insertions(+), 2 deletions(-)
$ git diff --stat master...erlang
 erlang_hw.erl |    5 +++++
 haskell.hs    |    4 ++++
 2 files changed, 9 insertions(+), 0 deletions(-)
";i:1;N;i:2;N;}i:2;i:3034;}i:86;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3034;}i:87;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:268:"几乎每一次你要对比两个分支的时候，你都会想用三个点的语法，因为它通常会给你你想要的。
顺带提一句，你还可以让 Git 手工计算两次提交的合并基础（第一个共同的祖提交），即 git merge-base 命令：";}i:2;i:3349;}i:88;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3623;}i:89;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:73:"
$ git merge-base master erlang
8d585ea6faf99facd39b55d6f6a3b3f481ad0d3d
";i:1;N;i:2;N;}i:2;i:3623;}i:90;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3623;}i:91;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:49:"所以你执行下面这个也跟 git diff master";}i:2;i:3706;}i:92;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:3755;}i:93;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"erlang 一样：";}i:2;i:3758;}i:94;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3780;}i:95;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:163:"
$ git diff --stat $(git merge-base master erlang) erlang
 erlang_hw.erl |    5 +++++
 haskell.hs    |    4 ++++
 2 files changed, 9 insertions(+), 0 deletions(-)
";i:1;N;i:2;N;}i:2;i:3780;}i:96;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3780;}i:97;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:42:"当然，我会推荐简单点的那个。";}i:2;i:3952;}i:98;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3994;}i:99;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3994;}i:100;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:140:"简而言之 使用 git diff 查看某一分支自它偏离出来起与过去某一点之间项目的改动。 总是使用 git diff branchA";}i:2;i:3996;}i:101;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:4136;}i:102;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:84:"branchB 来查看 branchB 与 branchA 的相对差值，这会让事情简单点。 ";}i:2;i:4139;}i:103;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4224;}i:104;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:4224;}i:105;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4231;}i:106;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:22:"diff时用到的参数";i:1;i:3;i:2;i:4231;}i:2;i:4231;}i:107;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:4231;}i:108;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:4261;}i:109;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4261;}i:110;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4261;}i:111;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:4265;}i:112;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:21:"wiki:git_commit_range";i:1;s:15:"比较的范围";}i:2;i:4266;}i:113;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4307;}i:114;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4307;}i:115;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:4307;}i:116;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:4308;}i:117;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4315;}i:118;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:16:"本地仓库diff";i:1;i:3;i:2;i:4315;}i:2;i:4315;}i:119;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:4315;}i:120;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:4339;}i:121;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4346;}i:122;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:31:"本地与远程仓库之间diff";i:1;i:3;i:2;i:4346;}i:2;i:4346;}i:123;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:4346;}i:124;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4387;}i:125;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:4387;}}