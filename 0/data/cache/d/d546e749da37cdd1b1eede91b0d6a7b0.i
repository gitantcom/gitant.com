a:117:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:0;}i:2;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:42:"如何回退到某个指定版本提交？";i:1;i:3;i:2;i:7;}i:2;i:7;}i:3;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:7;}i:4;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7;}i:5;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:43:"如下版本号，如何恢复到此提交?";}i:2;i:58;}i:6;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:107;}i:7;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:129:"
commit 4a155e5b3b4548f5f8139b5210b9bb477fa549de
Author: John Doe <Doe.John.10@gmail.com>
Date:   Thu Jul 21 20:51:38 2011 -0500
";i:1;N;i:2;N;}i:2;i:107;}i:8;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:107;}i:9;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:84:"执行如下操作，但是也将失去当前版本到指定版本之间的数据！";}i:2;i:245;}i:10;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:335;}i:11;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:26:"
git reset --hard 4a155e5
";i:1;N;i:2;N;}i:2;i:335;}i:12;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:371;}i:13;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:378;}i:14;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:42:"如何回退本地最新的一次提交？";i:1;i:3;i:2;i:378;}i:2;i:378;}i:15;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:378;}i:16;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:191:"
    $ git commit ...              (1)
    $ git reset --soft 'HEAD^'    (2)
    $ edit                        (3)
    $ git add ....                (4)
    $ git commit -c ORIG_HEAD     (5)
";i:1;s:4:"bash";i:2;N;}i:2;i:437;}i:17;a:3:{i:0;s:10:"listo_open";i:1;a:0:{}i:2;i:642;}i:18;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:642;}i:19;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:642;}i:20;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:30:" This is what you want to undo";}i:2;i:646;}i:21;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:676;}i:22;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:676;}i:23;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:676;}i:24;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:676;}i:25;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:169:" This is most often done when you remembered what you just committed is incomplete, or you misspelled your commit message, or both. Leaves working tree as it was before ";}i:2;i:680;}i:26;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:849;}i:27;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"reset";}i:2;i:850;}i:28;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:855;}i:29;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:55:". (The quotes may or may not be required in your shell)";}i:2;i:856;}i:30;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:911;}i:31;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:911;}i:32;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:911;}i:33;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:911;}i:34;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:39:" Make corrections to working tree files";}i:2;i:915;}i:35;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:954;}i:36;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:954;}i:37;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:954;}i:38;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:954;}i:39;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:25:" Stage changes for commit";}i:2;i:958;}i:40;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:983;}i:41;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:983;}i:42;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:983;}i:43;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:983;}i:44;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:" reset";}i:2;i:987;}i:45;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:993;}i:46;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:168:" copies the old head to .git/ORIG_HEAD; redo the commit by starting with its log message. If you do not need to edit the message further, you can give -C option instead";}i:2;i:994;}i:47;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1162;}i:48;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1162;}i:49;a:3:{i:0;s:11:"listo_close";i:1;a:0:{}i:2;i:1162;}i:50;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:1164;}i:51;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1171;}i:52;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:60:"如何强迫保持本地master分支与远程仓库同步？";i:1;i:3;i:2;i:1171;}i:2;i:1171;}i:53;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1171;}i:54;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:1241;}i:55;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1241;}i:56;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1241;}i:57;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:46:" 首先创建分支，保留当前工作状态";}i:2;i:1245;}i:58;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1291;}i:59;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1291;}i:60;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:1291;}i:61;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:78:"
$ git commit -a -m "Saving my work, just in case"
$ git branch my-saved-work
";i:1;s:4:"bash";i:2;N;}i:2;i:1297;}i:62;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:1390;}i:63;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1390;}i:64;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1390;}i:65;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:40:" 然后强制同步远端master分支；";}i:2;i:1394;}i:66;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1434;}i:67;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1434;}i:68;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:1434;}i:69;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:53:"
$ git fetch origin
$ git reset --hard origin/master
";i:1;s:4:"bash";i:2;N;}i:2;i:1441;}i:70;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:1509;}i:71;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1517;}i:72;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:27:"放弃最后一次提交？";i:1;i:3;i:2;i:1517;}i:2;i:1517;}i:73;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1517;}i:74;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1517;}i:75;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:57:"你做了一次提交后，你想取消刚才的提交？";}i:2;i:1555;}i:76;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1618;}i:77;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:65:"
$ git reset HEAD~
Unstaged changes after reset:
M Zeus
M Adonis
";i:1;s:4:"bash";i:2;N;}i:2;i:1618;}i:78;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:1697;}i:79;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1704;}i:80;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:24:"放弃某一次提交？";i:1;i:3;i:2;i:1704;}i:2;i:1704;}i:81;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1704;}i:82;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1704;}i:83;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:43:"使用~符号，HEAD~1是上两次提交。";}i:2;i:1739;}i:84;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1782;}i:85;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1782;}i:86;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"$ git reset HEAD~3";}i:2;i:1784;}i:87;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1803;}i:88;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:1803;}i:89;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1810;}i:90;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:31:"放弃合并或者pull操作？";i:1;i:3;i:2;i:1810;}i:2;i:1810;}i:91;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1810;}i:92;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:336:"
$ git pull                         <1>
Auto-merging nitfol
CONFLICT (content): Merge conflict in nitfol
Automatic merge failed; fix conflicts and then commit the result.
$ git reset --hard                 <2>
$ git pull . topic/branch          <3>
Updating from 41223... to 13134...
Fast-forward
$ git reset --hard ORIG_HEAD       <4>
";i:1;s:4:"bash";i:2;N;}i:2;i:1857;}i:93;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:2208;}i:94;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2214;}i:95;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:16:"别丢失HEAD？";i:1;i:3;i:2;i:2214;}i:2;i:2214;}i:96;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:2214;}i:97;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2214;}i:98;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:129:"HEAD好似一个游标，通常指向最新提交，随最新提交向前移动。一些Git命令让你来移动 它。 例如：";}i:2;i:2239;}i:99;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2374;}i:100;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:20:"
$ git reset HEAD~3
";i:1;s:4:"bash";i:2;N;}i:2;i:2374;}i:101;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2374;}i:102;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:191:"将立即向回移动HEAD三个提交。这样所有Git命令都表现得好似你没有做那最后三个提交， 然而你的文件保持在现在的状态。具体应用参见帮助页。";}i:2;i:2408;}i:103;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2599;}i:104;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2599;}i:105;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:66:"但如何回到将来呢？过去的提交对将来一无所知。";}i:2;i:2601;}i:106;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2667;}i:107;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2667;}i:108;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:44:"如果你有原先Head的SHA1值，那么：";}i:2;i:2669;}i:109;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2719;}i:110;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:18:"
$ git reset 1b6d
";i:1;s:4:"bash";i:2;N;}i:2;i:2719;}i:111;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2719;}i:112;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:155:"但假设你从来没有记下呢？别担心，像这些命令，Git保存原先的Head为一个叫 ORGI_HEAD的标记，你可以安全体面的返回：";}i:2;i:2751;}i:113;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2912;}i:114;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:23:"
$ git reset ORIG_HEAD
";i:1;s:4:"bash";i:2;N;}i:2;i:2912;}i:115;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2949;}i:116;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:2949;}}