a:41:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:10:"Git 简史";i:1;i:4;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:1;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1;}i:4;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:384:"同生活中的许多伟大事件一样，Git 诞生于一个极富纷争大举创新的年代。Linux 内核开源项目有着为数众广的参与者。绝大多数的 Linux 内核维护工作都花在了提交补丁和保存归档的繁琐事务上（1991－2002年间）。到 2002 年，整个项目组开始启用分布式版本控制系统 BitKeeper 来管理和维护代码。";}i:2;i:20;}i:5;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:404;}i:6;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:404;}i:7;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:378:"到了 2005 年，开发 BitKeeper 的商业公司同 Linux 内核开源社区的合作关系结束，他们收回了免费使用 BitKeeper 的权力。这就迫使 Linux 开源社区（特别是 Linux 的缔造者 Linus Torvalds ）不得不吸取教训，只有开发一套属于自己的版本控制系统才不至于重蹈覆辙。他们对新的系统制订了若干目标:";}i:2;i:406;}i:8;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:784;}i:9;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:784;}i:10;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:784;}i:11;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:784;}i:12;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"     速度";}i:2;i:807;}i:13;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:818;}i:14;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:818;}i:15;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:10;}i:2;i:818;}i:16;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:818;}i:17;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:"     简单的设计";}i:2;i:822;}i:18;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:842;}i:19;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:842;}i:20;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:10;}i:2;i:842;}i:21;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:842;}i:22;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:86:"     对非线性开发模式的强力支持（允许上千个并行开发的分支）";}i:2;i:846;}i:23;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:932;}i:24;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:932;}i:25;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:10;}i:2;i:932;}i:26;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:932;}i:27;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:"     完全分布式";}i:2;i:936;}i:28;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:956;}i:29;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:956;}i:30;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:10;}i:2;i:956;}i:31;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:956;}i:32;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:96:"     有能力高效管理类似 Linux 内核一样的超大规模项目（速度和数据量）";}i:2;i:960;}i:33;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1056;}i:34;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1056;}i:35;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:1056;}i:36;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1056;}i:37;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:301:"自诞生于 2005 年以来，Git 日臻成熟完善，在高度易用的同时，仍然保留着初期设定的目标。它的速度飞快，极其适合管理大项目，它还有着令人难以置信的非线性分支管理系统（见第三章），可以应付各种复杂的项目开发需求。";}i:2;i:1074;}i:38;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1375;}i:39;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1375;}i:40;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:1375;}}