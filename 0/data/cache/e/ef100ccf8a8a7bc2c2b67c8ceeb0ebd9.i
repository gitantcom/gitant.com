a:23:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:12:"源码发布";i:1;i:3;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1;}i:4;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:121:"就我的项目而言，Git完全跟踪了我想打包并发布给用户的文件。创建一个源码包，我运 行：";}i:2;i:23;}i:5;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:150;}i:6;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:54:"
$ git archive --format=tar --prefix=proj-1.2.3/ HEAD
";i:1;s:4:"bash";i:2;N;}i:2;i:150;}i:7;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:218;}i:8;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:33:"输出最后一次提交的改变";i:1;i:3;i:2;i:218;}i:2;i:218;}i:9;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:218;}i:10;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:218;}i:11;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:169:"这个命令，我经常使用它 来发送其他没有使用git的人来检查或者集成所修改的。它会输出最近提交的修改类容到一个zip文件中。";}i:2;i:263;}i:12;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:432;}i:13;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:67:"
	git archive -o ../updated.zip HEAD $(git diff --name-only HEAD^)
";i:1;s:4:"bash";i:2;N;}i:2;i:439;}i:14;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:523;}i:15;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:30:"输出两个提交间的改变";i:1;i:3;i:2;i:523;}i:2;i:523;}i:16;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:523;}i:17;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:523;}i:18;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:90:"类似的，如果你需要输出某两个提交间的改变时，你可以使用这个。";}i:2;i:565;}i:19;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:661;}i:20;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:111:"
	git archive -o ../latest.zip NEW_COMMIT_ID_HERE $(git diff--name-only OLD_COMMIT_ID_HERE NEW_COMMIT_ID_HERE)
";i:1;s:4:"bash";i:2;N;}i:2;i:661;}i:21;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:785;}i:22;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:785;}}