
<h3 class="sectionedit1" id="源码发布">源码发布</h3>
<div class="level3">

<p>
就我的项目而言，Git完全跟踪了我想打包并发布给用户的文件。创建一个源码包，我运 行：
</p>
<pre class="code bash"><span class="co4">$ </span><span class="kw2">git archive</span> <span class="re5">--format</span>=<span class="kw2">tar</span> <span class="re5">--prefix</span>=proj-1.2.3<span class="sy0">/</span> HEAD</pre>

</div>
<!-- EDIT1 SECTION "源码发布" [1-217] -->
<h3 class="sectionedit2" id="输出最后一次提交的改变">输出最后一次提交的改变</h3>
<div class="level3">

<p>
这个命令，我经常使用它 来发送其他没有使用git的人来检查或者集成所修改的。它会输出最近提交的修改类容到一个zip文件中。
</p>
<pre class="code bash">	<span class="kw2">git archive</span> <span class="re5">-o</span> ..<span class="sy0">/</span>updated.zip HEAD $<span class="br0">&#40;</span><span class="kw2">git diff</span> <span class="re5">--name-only</span> HEAD^<span class="br0">&#41;</span></pre>

</div>
<!-- EDIT2 SECTION "输出最后一次提交的改变" [218-522] -->
<h3 class="sectionedit3" id="输出两个提交间的改变">输出两个提交间的改变</h3>
<div class="level3">

<p>
类似的，如果你需要输出某两个提交间的改变时，你可以使用这个。
</p>
<pre class="code bash">	<span class="kw2">git archive</span> <span class="re5">-o</span> ..<span class="sy0">/</span>latest.zip NEW_COMMIT_ID_HERE $<span class="br0">&#40;</span><span class="kw2">git</span> diff--name-only OLD_COMMIT_ID_HERE NEW_COMMIT_ID_HERE<span class="br0">&#41;</span></pre>

</div>
<!-- EDIT3 SECTION "输出两个提交间的改变" [523-] -->