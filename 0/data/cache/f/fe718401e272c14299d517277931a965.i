a:74:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:24:"HTTPS 方式保存密码";i:1;i:3;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1;}i:4;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:24:"HTTPS 方式保存密码";}i:2;i:37;}i:5;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:61;}i:6;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:61;}i:7;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"OSX 用户";}i:2;i:63;}i:8;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:73;}i:9;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:73;}i:10;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:195:"如果你的网络环境中只能使用 HTTPS 的方式，那么可以尝试安装 osxkeychain 凭据助手，并在 Git 中设置使用。注意：Git 版本要在 1.7.9 及以上才可使用。";}i:2;i:75;}i:11;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:270;}i:12;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:270;}i:13;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:112:"如果你装了 homebrew 的话，那么应该已经自带了 osxkeychain，可以通过下面的命令验证：";}i:2;i:272;}i:14;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:384;}i:15;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:114:"$ git credential-osxkeychain
# Test for the cred helper
Usage: git credential-osxkeychain &lt;get|store|erase&gt;
";i:1;N;i:2;N;}i:2;i:391;}i:16;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:391;}i:17;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:63:"如果没有安装，那么可以使用 curl 下载并安装：";}i:2;i:515;}i:18;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:578;}i:19;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:331:"$ git credential-osxkeychain
# Test for the cred helper
git: 'credential-osxkeychain' is not a git command. See 'git --help'.

$ curl -s -O http://github-media-downloads.s3.amazonaws.com/osx/git-credential-osxkeychain
# Download the helper

$ chmod u+x git-credential-osxkeychain
# Fix the permissions on the file so it can be run
";i:1;N;i:2;N;}i:2;i:585;}i:20;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:585;}i:21;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"现在，你需要将助手安装到与 Git 的安装目录相同的位置：";}i:2;i:926;}i:22;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1003;}i:23;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:503:"$ which git
# Find where git is installed
/usr/local/git/bin/git

$ sudo mv git-credential-osxkeychain /usr/local/git/bin/
# Move the file so git can access it
Password: [enter your password]

# NOTE: the path /usr/local/git/bin may vary based on your OS version or where
# you have installed Git. If `which git` showed a different value, you should
# adjust the location to which you `mv` the file.  For example, if `which git`
# said "/usr/bin/git", use `sudo mv git-credential-osxkeychain /usr/bin`.
";i:1;N;i:2;N;}i:2;i:1010;}i:24;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1010;}i:25;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:82:"若想让 Git 使用 osxkeychain，可以在 Git 的全局设置中进行设置：";}i:2;i:1523;}i:26;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1605;}i:27;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:103:"$ git config --global credential.helper osxkeychain
# Set git to use the osxkeychain credential helper
";i:1;N;i:2;N;}i:2;i:1612;}i:28;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1612;}i:29;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:233:"经过这样的设置之后，下次再克隆 HTTPS 地址时会询问你的用户名和密码，并授权给 OSX keychain。完成这些之后你的用户名和密码就会存储到 keychain 中，再也不会在 Git 中询问了。";}i:2;i:1725;}i:30;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1958;}i:31;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1958;}i:32;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:"Windows 用户";}i:2;i:1960;}i:33;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1974;}i:34;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1974;}i:35;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:112:"如果你是 Windows 用户，那么首先可以考虑使用 GitHub for Windows，它已经包含了该助手。";}i:2;i:1976;}i:36;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2088;}i:37;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2088;}i:38;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:72:"如果你是钟爱命令行的话，可以下载对应系统的版本：";}i:2;i:2090;}i:39;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2162;}i:40;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2162;}i:41;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:24:"Windows Vista & 7 版本";}i:2;i:2164;}i:42;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2188;}i:43;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2188;}i:44;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"Windows 8 版本";}i:2;i:2190;}i:45;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2206;}i:46;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2206;}i:47;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"Source 版本";}i:2;i:2208;}i:48;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2221;}i:49;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2221;}i:50;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:210:"解压缩文件并将里面的 git-credential-winstore.exe 放到 git 所在的目录运行即可，下次再 commit 的时候，会弹出个窗口询问用户名和密码，填写一次即可永久保存了。";}i:2;i:2223;}i:51;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2433;}i:52;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2433;}i:53;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"Linux 用户";}i:2;i:2438;}i:54;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2450;}i:55;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2450;}i:56;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:182:"Linux 用户可以使用 ‘cache’ 认证助手包来缓存认证信息，运行下面的命令来启用凭据缓存，启用后每次输入密码将保存一小时（3600秒）：";}i:2;i:2452;}i:57;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2634;}i:58;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:61:"git config --global credential.helper 'cache --timeout 3600'
";i:1;N;i:2;N;}i:2;i:2641;}i:59;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2641;}i:60;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:70:"下面的命令可以查看 ‘cache’ 认证助手的所有配置：";}i:2;i:2712;}i:61;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2782;}i:62;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:26:"git help credential-cache
";i:1;N;i:2;N;}i:2;i:2789;}i:63;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2789;}i:64;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:137:"除了这些方法之外，还有一种使用 .netrc 文件的方式，感兴趣的同学可以看看参考资料中的第一篇文章。";}i:2;i:2825;}i:65;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2962;}i:66;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2962;}i:67;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:"参考资料：";}i:2;i:2964;}i:68;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2979;}i:69;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2979;}i:70;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:138:"https://confluence.atlassian.com/display/STASH/Permanently+authenticating+with+Git+repositorieshttps://help.github.com/articles/set-up-git";i:1;N;}i:2;i:2981;}i:71;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3119;}i:72;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3120;}i:73;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:3120;}}